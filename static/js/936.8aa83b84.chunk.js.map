{"version":3,"file":"static/js/936.8aa83b84.chunk.js","mappings":"oMAKaA,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,GAAWC,EAAAA,EAAAA,MAKnB,OACE,wBACGF,EAAKG,KAAI,SAAAC,GAAI,OAEV,SAAC,KAAD,CAEEC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMP,GAHjB,SAKGG,EAAKK,gBAAkBL,EAAKM,MAJxBN,EAAKE,GAHF,KAanB,C,uJCxBYK,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE3B,OACE,kBAAMC,SAAUD,EAAhB,WACE,kBAAOE,KAAK,OAAOJ,KAAK,YACxB,yCAGL,ECqED,EAxEe,WACb,OAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KA2CA,OApBCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,yFACZC,EAAQJ,EAAaK,IAAI,cADb,2EAIGC,EAAAA,EAAAA,IAAgBF,GAJnB,aAIVvB,EAJU,QAKP0B,OAAS,GALF,wBAMdC,MAAM,4BANQ,2BAUhBV,EAAajB,GAVG,kDAYhB4B,QAAQC,IAAR,MAZgB,0DAAH,qDAejBP,IACAM,QAAQC,IAAIV,EACb,GAAE,CAACA,KAgBH,iCAME,SAACR,EAAD,CAAYC,YA5DI,SAAAkB,GAClBA,EAAMC,iBAEN,IAAMC,EAAaF,EAAMG,OAAOC,OAAOC,MAKvC,GAJAf,EAAgB,CAAEY,WAAAA,IAElBF,EAAMG,OAAOC,OAAOC,MAAQ,GAET,KAAfH,EACF,OAAOZ,EAAgB,CAAC,GAG1BQ,QAAQC,IAAIG,EAIb,IA8CIhB,IAAa,SAACjB,EAAA,EAAD,CAAYC,KAAMgB,MAGrC,C","sources":["components/MoviesList.jsx","components/FormSubmit.jsx","pages/Movies.jsx"],"sourcesContent":["// import { List } from '../../pages/Home/Home.styled';\n\nimport { Link, useLocation } from 'react-router-dom';\n\n\nexport const MoviesList = ({ data }) => {\n    const location = useLocation();\n    \n\n\n    \n  return (\n    <ul>\n      {data.map(item => (\n        \n          <Link\n            key={item.id}\n            to={`/movies/${item.id}`}\n            state={{ from: location }}\n          >\n            {item.original_title || item.name}\n          </Link>\n       \n      ))}\n    </ul>\n  );\n};\n\n\n","\n\nexport const FormSubmit = ({ searchMovie }) => {\n\n  return (\n    <form onSubmit={searchMovie}>\n      <input type=\"text\" name=\"search\" />\n      <button>Search</button>\n    </form>\n  );\n};\n","// import { useEffect } from 'react';\nimport { useState, useEffect } from 'react';\nimport {  useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from '../services/api'\nimport { MoviesList } from '../components/MoviesList';\nimport { FormSubmit } from '../components/FormSubmit';\n\nconst Movies = () => {\n  const [movieData, setMovieData] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  \n\n  const searchMovie = event => {\n    event.preventDefault();\n\n    const movieQuery = event.target.search.value;\n    setSearchParams({ movieQuery });\n\n    event.target.search.value = '';\n\n    if (movieQuery === '') {\n      return setSearchParams({});\n    }\n    \n    console.log(movieQuery);\n\n    \n      \n  };\n\n  // const visibleMovie = movies.filter(movie => movie.includes(movieId));\n\n   useEffect(() => {\n     const fetchMovies = async () => {\n       const query = searchParams.get('movieQuery');\n       if (!query) return;\n       try {\n         const data = await getMoviesByName(query);\n         if (data.length < 1) {\n           alert('Sorry...We found nothing');\n           return;\n         }\n\n         setMovieData(data);\n       } catch (error) {\n         console.log(error);\n       }\n     };\n     fetchMovies();\n     console.log(searchParams);\n   }, [searchParams]);\n\n  return (\n    // <div>\n    //   <input type=\"text\" value={movieId} onChange={updateQueryString} />\n    //   <button>Search</button>\n\n    //   {/* {visibleMovie.map(movie => {\n    //     return (\n    //       <Link key={movie} to={`${movie}`} state={{ from: location }}>\n    //         {movie}\n    //       </Link>\n    //     );\n    //   })} */}\n    // </div>\n\n    <>\n      {/* <form onSubmit={searchMovie}>\n        <input type=\"text\" name=\"search\" />\n        <button>Search</button>\n      </form> */}\n\n      <FormSubmit searchMovie={searchMovie} />\n\n      {movieData && <MoviesList data={movieData} />}\n    </>\n  );\n};\n\nexport default Movies;\n\n\n"],"names":["MoviesList","data","location","useLocation","map","item","to","id","state","from","original_title","name","FormSubmit","searchMovie","onSubmit","type","useState","movieData","setMovieData","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovies","query","get","getMoviesByName","length","alert","console","log","event","preventDefault","movieQuery","target","search","value"],"sourceRoot":""}