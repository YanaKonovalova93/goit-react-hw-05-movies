{"version":3,"file":"static/js/553.0b99be87.chunk.js","mappings":"wRAGaA,EAAUC,EAAAA,EAAAA,IAAH,wDAKPC,GAAeD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,wLCLZG,GAAaH,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,6HASVI,EAAaJ,EAAAA,EAAAA,GAAH,8I,SCVVK,EAAwB,WACnC,OACE,iCACE,qDACA,UAACD,EAAD,YACE,yBACE,SAACD,EAAD,CAAyBG,GAAG,OAA5B,iBAAiB,WAInB,yBACE,SAACH,EAAD,CAA4BG,GAAG,UAA/B,oBAAiB,kBAO1B,ECkDD,EAhEsB,WAAO,IAAD,IAC1B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAE3DC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAcT,GAFrC,OAEUU,EAFV,OAGIX,EAAaW,GAHjB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACb,IAEJ,IAAMc,GAAsC,GAAzBhB,EAAUiB,cAAmBC,QAAQ,GAChDC,EAAkDnB,EAAlDmB,YAAaC,EAAqCpB,EAArCoB,eAAgBC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAE/C,OACE,+BACE,UAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,WACE,SAAC/B,EAAD,CAAcK,GAAIQ,EAAoBmB,QAAtC,8BAGCzB,IACC,UAACT,EAAD,YACE,0BACE,gBACEmC,IACEP,EAAW,0CAC4BA,GAbpC,8CAgBLQ,MAAO,IACPC,IAAI,cAIR,2BACG,KACD,wBAAKR,KACL,wCAAgBJ,EAAhB,SACA,sCACA,uBAAIK,KACJ,oCACA,wBACGC,EAAOO,KAAI,SAAAC,GAAI,OACd,wBAAmBA,EAAKC,MAAfD,EAAKE,GADA,aAOxB,SAACnC,EAAD,KACA,SAAC,KAAD,QAIP,C","sources":["pages/MoviesDetails/MoviesDetails.styled.jsx","components/AdditionalInformation/AdditionalInformation.styled.jsx","components/AdditionalInformation/AdditionalInformation.jsx","pages/MoviesDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const CardBox = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const ButtonGoBack = styled(Link)`\n  text-decoration: none;\n  color: currentColor;\n  font-size: 20px;\n  padding: 10px;\n  display: block;\n\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: currentColor;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: orangered;\n  }\n`;\n\nexport const StyledList = styled.ul`\n  color: currentColor;\n  display: flex;\n  gap: 50px;\n\n  > li {\n    list-style: none;\n    font-size: 20px;\n  }\n`;\n","import { StyledLink, StyledList } from './AdditionalInformation.styled';\n\nexport const AdditionalInformation = () => {\n  return (\n    <>\n      <h2> Additional information</h2>\n      <StyledList>\n        <li>\n          <StyledLink key={'cast'} to=\"cast\">\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink key={'reviews'} to=\"reviews\">\n            Reviews\n          </StyledLink>\n        </li>\n      </StyledList>\n    </>\n  );\n};\n","import { useRef, Suspense, useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMoviesById } from '../../services/api';\nimport { CardBox, ButtonGoBack } from './MoviesDetails.styled';\nimport { AdditionalInformation } from '../../components/AdditionalInformation/AdditionalInformation';\n\nconst MoviesDetails = () => {\n  const [movieData, setMovieData] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function movieById() {\n      try {\n        const data = await getMoviesById(movieId);\n        setMovieData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    movieById();\n  }, [movieId]);\n\n  const userScore = (movieData.vote_average * 10).toFixed(0);\n  const { poster_path, original_title, overview, genres } = movieData;\n  const defaultImg = 'https://waterstation.com.tr/img/default.jpg';\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <ButtonGoBack to={backLinkLocationRef.current}>\n          ‚ÜêGo to back\n        </ButtonGoBack>\n        {movieData && (\n          <CardBox>\n            <div>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultImg\n                }\n                width={350}\n                alt=\"poster\"\n              />\n            </div>\n\n            <div>\n              {' '}\n              <h1>{original_title}</h1>\n              <p>User Score: {userScore} %</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <ul>\n                {genres.map(item => (\n                  <li key={item.id}>{item.name}</li>\n                ))}\n              </ul>\n            </div>\n          </CardBox>\n        )}\n        <AdditionalInformation />\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["CardBox","styled","ButtonGoBack","Link","StyledLink","StyledList","AdditionalInformation","to","useState","movieData","setMovieData","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMoviesById","data","console","log","movieById","userScore","vote_average","toFixed","poster_path","original_title","overview","genres","Suspense","fallback","current","src","width","alt","map","item","name","id"],"sourceRoot":""}