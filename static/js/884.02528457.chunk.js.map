{"version":3,"file":"static/js/884.02528457.chunk.js","mappings":"iOAoFA,UA/EsB,WAAO,IAAD,IAC1B,GAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAG3DC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAcT,GAFrC,OAEUU,EAFV,OAGIX,EAAaW,GAHjB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACb,IAEJ,IAAMc,GAAsC,GAAzBhB,EAAUiB,cAAmBC,QAAQ,GAChDC,EAAkDnB,EAAlDmB,YAAaC,EAAqCpB,EAArCoB,eAAgBC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAE/C,OACE,0CACG,SAAC,KAAD,CAAMC,GAAIjB,EAAoBkB,QAA9B,wBACAxB,IACC,4BAME,gBACEyB,IACEN,EAAW,0CAC4BA,GAdhC,8CAiBTO,MAAO,IACPC,IAAI,YAGN,wBAAKP,KACL,wCAAgBJ,EAAhB,SACA,sCACA,uBAAIK,KACJ,oCACA,wBACGC,EAAOM,KAAI,SAAAC,GAAI,OACd,wBAAmBA,EAAKC,MAAfD,EAAKE,GADA,UAOpB,qDACE,2BACE,yBACE,SAAC,KAAD,CAAmBR,GAAG,OAAtB,iBAAW,WAIb,yBACE,SAAC,KAAD,CAAsBA,GAAG,UAAzB,oBAAW,iBAOjB,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIT,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useRef, Suspense, useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation} from \"react-router-dom\";\nimport { getMoviesById } from '../services/api';\n\n\nconst MoviesDetails = () => {\n  const [movieData, setMovieData] = useState('');\n  // const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n\n  useEffect(() => {\n    async function movieById() {\n      try {\n        const data = await getMoviesById(movieId);\n        setMovieData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    movieById();\n  }, [movieId]);\n\n  const userScore = (movieData.vote_average * 10).toFixed(0);\n  const { poster_path, original_title, overview, genres } = movieData;\n  const defaultImg = 'https://waterstation.com.tr/img/default.jpg';\n  return (\n    <>\n      ‚Üê<Link to={backLinkLocationRef.current}>Go to back</Link>\n      {movieData && (\n        <div>\n          {/* <img\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={name}\n            /> */}\n\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : defaultImg\n            }\n            width={250}\n            alt=\"poster\"\n          />\n\n          <h1>{original_title}</h1>\n          <p>User Score: {userScore} %</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {genres.map(item => (\n              <li key={item.id}>{item.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n     \n        <h2> Additional information</h2 >\n          <ul>\n            <li>\n              <Link key={'cast'} to=\"cast\">\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link key={'reviews'} to=\"reviews\">\n                Reviews\n              </Link>\n            </li>\n          </ul>\n\n\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </>\n    );\n};\n\nexport default MoviesDetails;\n"],"names":["useState","movieData","setMovieData","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMoviesById","data","console","log","movieById","userScore","vote_average","toFixed","poster_path","original_title","overview","genres","to","current","src","width","alt","map","item","name","id","Suspense","fallback"],"sourceRoot":""}