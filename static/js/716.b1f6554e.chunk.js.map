{"version":3,"file":"static/js/716.b1f6554e.chunk.js","mappings":"mNAGaA,EAAaC,EAAAA,EAAAA,GAAH,0RAaVC,EAAcD,EAAAA,EAAAA,IAAH,qEAKXE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,0E,SClBVI,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrBC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAACR,EAAD,UACGM,EAAKG,KAAI,SAAAC,GAAI,OACZ,SAACR,EAAD,WACE,UAACC,EAAD,CAEEQ,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMP,GAHjB,WAKE,gBACEQ,IACEL,EAAKM,YAAL,0CACuCN,EAAKM,aAdvC,8CAiBPC,MAAO,IACPC,IAAI,YAEN,uBAAIR,EAAKS,gBAAkBT,EAAKU,SAb3BV,EAAKE,KAFIF,EAAKE,GADX,KAsBnB,C,0KC9BYS,EAAgBpB,EAAAA,EAAAA,IAAH,0aAoBbqB,EAAOrB,EAAAA,EAAAA,KAAH,gLAWJsB,EAAStB,EAAAA,EAAAA,OAAH,scAmBNuB,EAAcvB,EAAAA,EAAAA,MAAH,6MAYXwB,EAAQxB,EAAAA,EAAAA,MAAH,4P,SCxDLyB,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3B,OACE,SAACN,EAAD,WACE,UAACC,EAAD,CAAMM,SAAUD,EAAhB,WACE,SAACF,EAAD,CACEI,KAAK,OACLT,KAAK,SACLU,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACT,EAAD,CAAQM,KAAK,SAAb,UACE,SAACL,EAAD,2BAKT,EC0BD,EA7Ce,WACb,OAAkCS,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAkCA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,yFACZC,EAAQJ,EAAaK,IAAI,cADb,2EAIGC,EAAAA,EAAAA,IAAgBF,GAJnB,aAIVnC,EAJU,QAKPsC,OAAS,GALF,wBAMdC,MAAM,4BANQ,2BAUhBV,EAAa7B,GAVG,kDAYhBwC,QAAQC,IAAR,MAZgB,0DAAH,qDAejBP,GACD,GAAE,CAACH,KAGF,iCACE,SAACX,EAAD,CAAYC,YAlCI,SAAAqB,GAClBA,EAAMC,iBAEN,IAAMC,EAAaF,EAAMG,OAAOC,OAAOC,MAKvC,GAJAf,EAAgB,CAAEY,WAAAA,IAElBF,EAAMG,OAAOC,OAAOC,MAAQ,GAET,KAAfH,EACF,OAAOZ,EAAgB,CAAC,EAE3B,IAyBIJ,IAAa,SAAC7B,EAAA,EAAD,CAAYC,KAAM4B,MAGrC,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/FormSubmit/FormSubmit.styled.jsx","components/FormSubmit/FormSubmit.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const HeaderList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(120px, 200px));\n  grid-gap: 50px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const LiContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: currentColor;\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { HeaderList, LiContainer, StyledLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  const defaultImg = 'https://waterstation.com.tr/img/default.jpg';\n\n  return (\n    <HeaderList>\n      {data.map(item => (\n        <LiContainer key={item.id}>\n          <StyledLink\n            key={item.id}\n            to={`/movies/${item.id}`}\n            state={{ from: location }}\n          >\n            <img\n              src={\n                item.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${item.poster_path}`\n                  : defaultImg\n              }\n              width={200}\n              alt=\"poster\"\n            />\n            <p>{item.original_title || item.name}</p>\n          </StyledLink>\n        </LiContainer>\n      ))}\n    </HeaderList>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  margin: 30px auto;\n  top: 0;\n  left: 0;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  max-width: 600px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: #fff;\n  background-color: #3fb58a8b;\n  box-shadow: 0px 2px 4px - 1px rgba(0, 0, 0, 0.2), 0px 4px;\n  border-radius: 3px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://img.uxwing.com/wp-content/themes/uxwing/download/user-interface/search-icon.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.5;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  Form,\n  Button,\n  Input,\n  ButtonLabel,\n  FormContainer,\n} from './FormSubmit.styled';\n\nexport const FormSubmit = ({ searchMovie }) => {\n  return (\n    <FormContainer>\n      <Form onSubmit={searchMovie}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <Button type=\"submit\">\n          <ButtonLabel>Search</ButtonLabel>\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from '../services/api';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { FormSubmit } from '../components/FormSubmit/FormSubmit';\n\nconst Movies = () => {\n  const [movieData, setMovieData] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchMovie = event => {\n    event.preventDefault();\n\n    const movieQuery = event.target.search.value;\n    setSearchParams({ movieQuery });\n\n    event.target.search.value = '';\n\n    if (movieQuery === '') {\n      return setSearchParams({});\n    }\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const query = searchParams.get('movieQuery');\n      if (!query) return;\n      try {\n        const data = await getMoviesByName(query);\n        if (data.length < 1) {\n          alert('Sorry...We found nothing');\n          return;\n        }\n\n        setMovieData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [searchParams]);\n\n  return (\n    <>\n      <FormSubmit searchMovie={searchMovie} />\n\n      {movieData && <MoviesList data={movieData} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["HeaderList","styled","LiContainer","StyledLink","Link","MoviesList","data","location","useLocation","map","item","to","id","state","from","src","poster_path","width","alt","original_title","name","FormContainer","Form","Button","ButtonLabel","Input","FormSubmit","searchMovie","onSubmit","type","autoComplete","autoFocus","placeholder","useState","movieData","setMovieData","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovies","query","get","getMoviesByName","length","alert","console","log","event","preventDefault","movieQuery","target","search","value"],"sourceRoot":""}